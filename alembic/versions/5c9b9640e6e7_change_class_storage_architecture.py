"""change class storage architecture

Revision ID: 5c9b9640e6e7
Revises: 3f54f5967d3f
Create Date: 2025-05-26 00:19:57.852976

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5c9b9640e6e7'
down_revision: Union[str, None] = '3f54f5967d3f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('class_promotions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_class_id', sa.Integer(), nullable=False),
    sa.Column('to_class_id', sa.Integer(), nullable=False),
    sa.Column('promotion_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['to_class_id'], ['classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_class_promotions_id'), 'class_promotions', ['id'], unique=False)
    op.create_table('student_class_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('reason', sa.Enum('ADMISSION', 'TRANSFER', 'RETURN', name='studentclasshistoryreason'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_class_history_id'), 'student_class_history', ['id'], unique=False)
    op.add_column('classes', sa.Column('grade_level', sa.Integer(), nullable=False))
    op.add_column('classes', sa.Column('letter', sa.String(length=1), nullable=False))
    op.add_column('classes', sa.Column('specialization', sa.String(), nullable=True))
    op.add_column('schedule', sa.Column('location', sa.String(), nullable=True))
    op.add_column('schedule', sa.Column('description', sa.String(), nullable=True))
    op.add_column('schedule', sa.Column('is_cancelled', sa.Boolean(), nullable=True))
    op.drop_column('schedule', 'room_id')
    op.add_column('students', sa.Column('admission_year', sa.Integer(), nullable=True))
    op.add_column('subjects', sa.Column('back_ground_color', sa.String(), nullable=True))
    op.add_column('subjects', sa.Column('border_color', sa.String(), nullable=True))
    op.add_column('subjects', sa.Column('text_color', sa.String(), nullable=True))
    op.add_column('subjects', sa.Column('icon', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('subjects', 'icon')
    op.drop_column('subjects', 'text_color')
    op.drop_column('subjects', 'border_color')
    op.drop_column('subjects', 'back_ground_color')
    op.drop_column('students', 'admission_year')
    op.add_column('schedule', sa.Column('room_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('schedule', 'is_cancelled')
    op.drop_column('schedule', 'description')
    op.drop_column('schedule', 'location')
    op.drop_column('classes', 'specialization')
    op.drop_column('classes', 'letter')
    op.drop_column('classes', 'grade_level')
    op.drop_index(op.f('ix_student_class_history_id'), table_name='student_class_history')
    op.drop_table('student_class_history')
    op.drop_index(op.f('ix_class_promotions_id'), table_name='class_promotions')
    op.drop_table('class_promotions')
    op.execute('DROP TYPE IF EXISTS studentclasshistoryreason')
    # ### end Alembic commands ###