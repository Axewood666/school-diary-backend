version: "3.8"

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
  minio_data:


services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: diary_db
      POSTGRES_INITDB_ARGS: "--locale=ru_RU.utf8"
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d diary_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - backend-network

  diary:
    container_name: diary
    build: .
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/diary_db
      DATABASE_URL_MIGRATE: postgresql+psycopg2://postgres:postgres@postgres:5432/diary_db
      SECRET_KEY: nuts_key
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPEIRE_MINUTES: 600
      PROJECT_NAME: School Diary API
      API_V1_STR: /api/v1
      PORT: 80
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: MY_ACCESS_MINIO
      MINIO_SECRET_KEY: MY_SECRET_MINIO
      MINIO_PUBLIC_BUCKET: public
      MINIO_USE_HTTPS: "false"
      MINIO_EXTERNAL_ENDPOINT: minio.axewood666.ru
    ports:
      - "8000:80"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend-network

  caddy:
    container_name: caddy
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - diary
    restart: unless-stopped
    networks:
      - backend-network

  minio:
    container_name: minio
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: MY_ACCESS_MINIO
      MINIO_ROOT_PASSWORD: MY_SECRET_MINIO
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
